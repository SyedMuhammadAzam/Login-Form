{"ast":null,"code":"var _jsxFileName = \"D:\\\\Use Effect Hook\\\\01-starting-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport Navigation from \"./components/MainHeader/Navigation\";\nimport AuthContext from \"./components/Login/Context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const UserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n    if (UserLoggedInInformation === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, [//array of dependencies ....\n  ]);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    setIsLoggedIn(true);\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem(\"isLoggedIn\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainHeader // isAuthenticated={isLoggedIn}\n    , {\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Use Effect Hook/01-starting-project/src/App.js"],"names":["React","useState","useEffect","Login","Home","MainHeader","Navigation","AuthContext","App","isLoggedIn","setIsLoggedIn","UserLoggedInInformation","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,yCAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CACP,MAAM;AACJ,UAAMS,uBAAuB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAhC;;AAEA,QAAIF,uBAAuB,KAAK,GAAhC,EAAqC;AACnCD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GAPM,EAQP,CACE;AADF,GARO,CAAT;;AAaA,QAAMI,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC;AACA;AACAN,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACD,GALD;;AAOA,QAAMC,aAAa,GAAG,MAAM;AAC1BR,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,YAAY,CAACO,UAAb,CAAwB,YAAxB;AACD,GAHD;;AAKA,sBAEI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACLV,MAAAA,UAAU,EAAGA;AADR,KADX;AAAA,4BAKA,QAAC,UAAD,CACD;AADC;AAEC,MAAA,QAAQ,EAAES;AAFX;AAAA;AAAA;AAAA;AAAA,YALA,eAQA;AAAA,iBACG,CAACT,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEK;AAAhB;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGL,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YARA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBD;;GA7CQV,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport Navigation from \"./components/MainHeader/Navigation\";\nimport AuthContext from \"./components/Login/Context/auth-context\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(\n    () => {\n      const UserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n      if (UserLoggedInInformation === \"1\") {\n        setIsLoggedIn(true);\n      }\n    },\n    [\n      //array of dependencies ....\n    ]\n  );\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    setIsLoggedIn(true);\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem(\"isLoggedIn\");\n  };\n\n  return (\n     \n      <AuthContext.Provider \n          value={{\n            isLoggedIn : isLoggedIn,\n          }}\n        >\n      <MainHeader \n     // isAuthenticated={isLoggedIn}\n       onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n      </AuthContext.Provider>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}